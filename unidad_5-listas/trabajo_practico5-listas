##Actividades## 
## Crear una lista con las notas de 10 estudiantes. ##
## Mostrar la lista completa. ##
## Calcular y mostrar el promedio ##
## indicar la nota mas alta y mas baja##

notas_estudiantes = [10, 8, 9, 6, 7, 8.5, 9.5, 7.5, 4, 5 ]

print("notas de los etudiantes " )
for nota in notas_estudiantes:
     print(nota)
print("el promedio de las notas es:" , sum(notas_estudiantes)/len(notas_estudiantes))
print("la nota mas alta es:" , max(notas_estudiantes))
print("la nota mas baja es:" , min(notas_estudiantes))


## Pedir al usuario que cargue 5 productos en una lista. ##
## Mostrar la lista ordenada alfabéticamente. Investigue el uso del método sorted().  ##
## Preguntar al usuario qué producto desea eliminar y actualizar la lista ##

lista = [] 
for i in range(5):
    producto = input("ingrese 5 productos: ")
    lista.append(producto)
    print("lista de productos ordenada alfabeticamente:", sorted(lista))

eliminar = input("ingrese el producto que desea eliminar: ")
lista.remove(eliminar)
print("lista actualizada: ", lista)

## Generar una lista con 15 números enteros al azar entre 1 y 100.## 
## Crear una lista con los pares y otra con los impares. ##
## Mostrar cuántos números tiene cada lista. ##
import random
numeros = [random.randint(1,100) for _ in range(15)]
pares = [num for num in numeros if num % 2 == 0]
impares = [num for num in numeros if num % 2 != 0]
print("numeros generados: ", numeros)
print("numeros pares:" , pares)
print("numeros impares:" , impares)
print("cantidad de numeros pares: ", len(pares))
print("cantidad de numeros impares: ", len(impares))


 ## Dada una lista con valores repetidos: ##
## datos = [1 , 3 , 5 , 3 , 7 , 9 , 1 , 5 , 3 ] ##
## Crear una nueva lista sin elementos repetidos. ##
## Mostrar el resultado.

datos = [1 , 3 , 5 , 3 , 7 , 9 , 1 , 5 , 3 ]
nueva_lista = list(set(datos))
print("Lista original:", datos)
print("Lista sin elementos repetidos:", nueva_lista)


##Crear una lista con los nombres de 8 estudiantes presentes en clase. ##
## Preguntar al usuario si quiere agregar un nuevo estudiante o eliminar uno existente. ##
## Mostrar la lista final actualizada##


estudiantes = [ "maty" , "dahy" , "juanito" , "alejandro" , "diego" , "morena" , "valentino" , "tomas" ]
print("estudiantes presentes en clase : " , estudiantes)
accion = input(" quiere agregar un nuevo estudiante o eliminar alguno existente? escribe 'agregar' o 'eliminar': ")
if accion == "agregar": ## aca no sabia si agregar un .lower para que no importe si escribe en mayuscula o minuscula  lo hice asi pero espero sugerencia## 
    nuevo_estudiante = input("ingrese el nombre del nuevo estudiante:")
    estudiantes.append(nuevo_estudiante)
elif accion == "eliminar":
    eliminar_estudiante = input("ingrese el nombre del estudiante que desea eliminar: ")
    estudiantes.remove(eliminar_estudiante)


print("lista actualizada:" , estudiantes)


## Dada una lista con 7 números, rotar todos los elementos una posición hacia la derecha ##
##  el último pasa a ser el primero ##
lista = [10 , 22 , 73 , 7 , 87 , 48 , 38]
print("lista original:", lista)
lista = [lista[-1]] + lista[:-1]
print("lista hacia la derecha:", lista)

## Crear una matriz (lista anidada) de 7x2 con las temperaturas mínimas y máximas de una ##
##semana. ##
##Calcular el promedio de las mínimas y el de las máximas. ##
##Mostrar en qué día se registró la mayor amplitud térmica##
matriz = [
    [15, 25],  # Día 1
    [17, 28],  # Día 2
    [14, 22],  # Día 3
    [16, 30],  # Día 4
    [18, 27],  # Día 5
    [19, 29],  # Día 6
    [13, 24]   # Día 7
]

promedio_min = sum(fila[0] for fila in matriz) / len(matriz)
promedio_max = sum(fila[1] for fila in matriz) / len(matriz)
print("Promedio de temperaturas mínimas:", promedio_min)
print("Promedio de temperaturas máximas:", promedio_max)


mayor_amplitud = 0
dia_mayor_amplitud = 0

for i in range(len(matriz)):
    amplitud = matriz[i][1] - matriz[i][0] 
    if amplitud > mayor_amplitud:
        mayor_amplitud = amplitud
        dia_mayor_amplitud = i + 1

print(f"El día {dia_mayor_amplitud} tuvo la mayor amplitud térmica con {mayor_amplitud} grados")

## Crear una matriz con las notas de 5 estudiantes en 3 materias ##
## Mostrar el promedio de cada estudiante ## 
## Mostrar el promedio de cada materia. ##
matriz = [
    [8 , 9 , 10],
    [5 , 7 , 9],
    [4 , 7, 10],
    [5 , 8 , 6],
    [10 , 9 , 10]
]

for i in range(len(matriz)):
    promedio_estudiante = sum(matriz[i]) / len(matriz[i])
    print(f"Promedio del estudiante {i+1}: {promedio_estudiante:.2f}")
for j in range(len(matriz[0])):
    promedio_materia = sum(matriz[i][j] for i in range(len(matriz))) / len(matriz)
    print(f"Promedio de la materia {j+1}: {promedio_materia:.2f}")

##Representar un tablero de Ta-Te-Ti como una lista de listas (3x3). ##
## Inicializarlo con guiones "-" representando casillas vacías. ##
## Permitir que dos jugadores ingresen posiciones (fila, columna) para colocar "X" o "O". ##
## Mostrar el tablero después de cada jugada##
# Crear el tablero 3x3 inicializado con guiones


## creo el tablero con dos listas porq es una matriz 3x3##
tablero = [["-" for _ in range(3)] for _ in range(3)]
# utilizo def para mostrar el tablero cada vez que se haga una jugada##
# uso def para definir la funcion y join para poner una linea entre celdas ##
def mostrar_tablero():
    for fila in tablero:
        print("|".join(fila))
        print("-----")
## muestro el tablero vacio cuando empieza el juego ##
mostrar_tablero()
## hago un bucle para 9 posibilidades que tiene el juego ##
for turno in range(9):
    jugador = "X" if turno % 2 == 0 else "O"
## aca el jugador elige donde poner la ficha ##
    fila = int(input(f"Jugador {jugador}, ingrese la fila (0-2) teniendo en cuenta q la fila 0 es la primera de arriba: "))
    columna = int(input(f"Jugador {jugador}, ingrese la columna (0-2) teniendo en cuenta q 0 es la primera de la izquierda: "))


    ## aca me aseguro que la casilla este vacia para poner la ficha ##
    ## si esta ocupada le digo que intente de nuevo ##
    if tablero[fila][columna] == "-":
        tablero[fila][columna] = jugador
    else:
        print("Casilla ya ocupada, intente de nuevo.")
        continue
    ## aca muestro el tablero desp de cada jugada ##
    mostrar_tablero()

    ## nota para la profe##
    ## mi problema es q no se como hacer para q el juego termine cuando alguien gana ##
    ## y me salta error si alguien pone un numero que no sea del 0 al 2##
    ## utilice def y otros comandos q no vimos aun porq estoy investigando en internet...##
    ## y hace varios dias q estoy tratando de hacer este juego y no puedo avanzar##
    ## espero que se entienda la idea del juego y lo q intente hacer ##

    

    ## Una tienda registra las ventas de 4 productos durante 7 días, en una matriz de 4x7. ##
## Mostrar el total vendido por cada producto. ##
## Mostrar el día con mayores ventas totales. ##
## Indicar cuál fue el producto más vendido en la semana. ##
ventas = [
[3,5,8,7,2,6,9],  # Producto 1
[8,4,12,16,5,9,2], # producto 2
[4,8,15,21,8,16,11], #producto3
[9,24,10,5,16,27,14] #producto4
]
total_por_producto = []

for i in range(4):
    total_producto = 0
    for j in range(7):
        total_producto += ventas[i][j]
    total_por_producto.append(total_producto)
    print(f"total vendido del producto {i+1}: {total_producto}")

mayor_ventas = 0
dia_mayor = 0

for j in range(7):
    total_dia = 0
    for i in range(4):
        total_dia += ventas[i][j]
    print(f"total del dia {j+1}: {total_dia}")
    if total_dia > mayor_ventas:
        mayor_ventas = total_dia
        dia_mayor = j
print(f"el dia con mayor venta fue el {dia_mayor+1}, con {mayor_ventas} ventas.")

mayor_producto = 0
indice_mayor = 0

for i in range(4):
    if total_por_producto[i] > mayor_producto:
        mayor_producto = total_por_producto[i]
        indice_mayor = i
print(f"el profucto mas vendido fue {indice_mayor+1}, con {mayor_producto} ventas en la semana")